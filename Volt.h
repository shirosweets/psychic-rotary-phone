//
// Generated file, do not edit! Created by nedtool 5.3 from Volt.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __VOLT_H
#define __VOLT_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0503
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Volt.msg:2</tt> by nedtool.
 * <pre>
 * packet Volt
 * {
 *     bool flags = false;
 *     int seqNumber;
 *     int windowSize;
 * }
 * </pre>
 */
class Volt : public ::omnetpp::cPacket
{
  protected:
    bool flags;
    int seqNumber;
    int windowSize;

  private:
    void copy(const Volt& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Volt&);

  public:
    Volt(const char *name=nullptr, short kind=0);
    Volt(const Volt& other);
    virtual ~Volt();
    Volt& operator=(const Volt& other);
    virtual Volt *dup() const override {return new Volt(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual bool getFlags() const;
    virtual void setFlags(bool flags);
    bool getAckFlag();
    void setAckFlag(bool ackFlag);
    bool getRetFlag(); // Retransmission Flag
    void setRetFlag(bool retFlag);
    virtual int getSeqNumber() const;
    virtual void setSeqNumber(int seqNumber);
    virtual int getWindowSize() const;
    virtual void setWindowSize(int windowSize);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Volt& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Volt& obj) {obj.parsimUnpack(b);}


#endif // ifndef __VOLT_H

